generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["typedSql"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_DATABASE_URL")
}

model Album {
  id                   String     @id @default(uuid()) @db.Uuid
  artist               String
  comments             String?
  firstPlayedTimestamp DateTime?  @map("first_played_timestamp") @db.Timestamp(6)
  firstPlayedDate      Int[]      @map("first_played_date")
  title                String
  year                 Int?
  type                 AlbumType?
  createdAt            DateTime   @default(now()) @map("inserted_at") @db.Timestamp(6)
  updatedAt            DateTime   @updatedAt @map("updated_at") @db.Timestamp(6)
  sources              Source[]

  @@map("albums")
}

enum AlbumType {
  ALBUM       @map("album")
  SINGLE      @map("single")
  EP          @map("ep")
  COMPILATION @map("compilation")
  LIVE        @map("live")
  SOUNDTRACK  @map("soundtrack")

  @@map("album_type")
}

model Source {
  id          BigInt   @id @default(autoincrement())
  accurateRip String?  @map("accurate_rip")
  comments    String?
  cueIssues   String?  @map("cue_issues")
  discs       Int?
  download    String?
  edition     String?
  format      Format?
  location    Location
  mbid        String?  @db.Uuid
  tagIssues   String?  @map("tag_issues")
  albumId     String   @map("album_id") @db.Uuid
  createdAt   DateTime @default(now()) @map("inserted_at") @db.Timestamp(6)
  updatedAt   DateTime @updatedAt @map("updated_at") @db.Timestamp(6)
  album       Album    @relation(fields: [albumId], references: [id], onDelete: Cascade)

  @@index([albumId], map: "album_sources_album_id_index")
  @@map("album_sources")
}

enum Location {
  APPLE_MUSIC  @map("apple-music")
  FOOBAR2000   @map("foobar2000")
  GOOGLE_MUSIC @map("google-music")
  SPOTIFY      @map("spotify")

  @@map("location")
}

enum Format {
  TAK
  APE
  MP3
  FLAC
  WMA
  MIXED
  MPC

  @@map("format")
}
