type Album {
  artist: String!
  comments: String
  firstPlayed: FirstPlayed
  id: ID!
  sources: [Source!]!
  title: String!
  type: AlbumType
  year: Int
}

type AlbumPerYearCount {
  count: Int!
  year: Int!
}

enum AlbumType {
  ALBUM
  COMPILATION
  EP
  LIVE
  SINGLE
  SOUNDTRACK
}

union FirstPlayed = FirstPlayedDate | FirstPlayedTimestamp

type FirstPlayedDate {
  day: Int
  month: Int
  year: Int!
}

input FirstPlayedInput {
  day: Int
  month: Int
  timestamp: Int
  year: Int
}

type FirstPlayedTimestamp {
  timestamp: Int!
}

enum Format {
  APE
  FLAC
  MIXED
  MP3
  MPC
  TAK
  WMA
}

enum Location {
  APPLE_MUSIC
  FOOBAR2000
  GOOGLE_MUSIC
  SPOTIFY
}

type Mutation {
  createAlbum(input: MutationCreateAlbumInput!): Album!
  deleteAlbum(id: UUID!): Boolean!
  login(password: String!): Boolean!
  updateAlbum(input: MutationUpdateAlbumInput!): Album!
}

input MutationCreateAlbumInput {
  artist: String!
  comments: String
  firstPlayed: FirstPlayedInput
  sources: [NewSourceInput!]!
  title: String!
  type: AlbumType!
  year: Int
}

input MutationUpdateAlbumInput {
  artist: String!
  comments: String
  firstPlayed: FirstPlayedInput
  id: String!
  sources: [SourceInput!]!
  title: String!
  type: AlbumType!
  year: Int
}

input NewSourceInput {
  accurateRip: String
  comments: String
  cueIssues: String
  discs: Int
  download: String
  edition: String
  format: Format
  location: Location!
  mbid: UUID
  tagIssues: String
}

type Query {
  album(id: UUID!): Album!
  albumPerFirstPlayedYearCount: [AlbumPerYearCount!]!
  albumPerYearCount: [AlbumPerYearCount!]!
  albums(input: QueryAlbumsInput!): [Album!]!
  albumsByFirstPlayedYear(year: Int!): [Album!]!
  albumsByYear(year: Int!): [Album!]!
}

input QueryAlbumsInput {
  query: String!
}

type Source {
  accurateRip: String
  comments: String
  cueIssues: String
  discs: Int
  download: String
  edition: String
  format: Format
  id: ID!
  location: Location!
  mbid: UUID
  tagIssues: String
}

input SourceInput {
  accurateRip: String
  comments: String
  cueIssues: String
  discs: Int
  download: String
  edition: String
  format: Format
  id: ID
  location: Location!
  mbid: UUID
  tagIssues: String
}

"""
A field whose value is a generic Universally Unique Identifier: https://en.wikipedia.org/wiki/Universally_unique_identifier.
"""
scalar UUID